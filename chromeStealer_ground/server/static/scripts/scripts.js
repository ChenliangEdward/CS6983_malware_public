function openTab(evt, tabName) {
    var i, tabcontent, tablinks;
    tabcontent = document.getElementsByClassName("tabcontent");
    for (i = 0; i < tabcontent.length; i++) {
        tabcontent[i].style.display = "none";
    }
    tablinks = document.getElementsByClassName("tablinks");
    for (i = 0; i < tablinks.length; i++) {
        tablinks[i].className = tablinks[i].className.replace(" active", "");
    }
    document.getElementById(tabName).style.display = "block";
    if (evt) evt.currentTarget.className += " active";
}
// function openTab(evt, tabName) {
//     var i, tabcontent, tablinks;
//     tabcontent = document.getElementsByClassName("tabcontent");
//     for (i = 0; i < tabcontent.length; i++) {
//         tabcontent[i].style.display = "none";
//     }
//     tablinks = document.getElementsByClassName("tablinks");
//     for (i = 0; i < tablinks.length; i++) {
//         tablinks[i].className = tablinks[i].className.replace(" active", "");
//     }
//     var activeTab = document.getElementById(tabName);
//     activeTab.style.display = "block";
//     if (evt) evt.currentTarget.className += " active";

//     // Assume a function that fetches new content for the tab
//     fetchTabContent(tabName);
// }

// function fetchTabContent(tabName) {
//     // Fetch new content from the server
//     fetch(`/path/to/content?tab=${tabName}`)
//         .then(response => response.text())
//         .then(html => {
//             document.getElementById(tabName).innerHTML = html;
//         })
//         .catch(error => console.error('Error loading the tab content:', error));
// }


// Adding event listener to form to prevent default submission and handle AJAX
document.getElementById('taskForm').addEventListener('submit', function(e) {
    e.preventDefault();
    const formData = new FormData(this);
    fetch('/512cb2c5017819a6688a7', {
        method: 'POST',
        body: formData,
        headers: {
            'X-Requested-With': 'XMLHttpRequest'
        },
    })
    .then(response => response.json())
    .then(data => {
        console.log(data);
        // Additional code to update UI, if necessary
    })
    .catch(error => console.error('Error:', error));
});
document.addEventListener('change', function() {
    const implantSelect = document.getElementById('implant_list');
    const resultTextArea = document.getElementById('result');
    
    // Assuming you want to use the first option in the list
    const selectedOption = implantSelect.options[implantSelect.selectedIndex];
    const commandId = selectedOption.getAttribute('data-id');

    fetch(`/783ebb1071ae840fda8f11?commandId=${encodeURIComponent(commandId)}`)
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            resultTextArea.value = data.result; // Assuming the API sends back a JSON with a "result" key
        })
        .catch(error => {
            console.error('Error:', error);
            resultTextArea.value = 'Failed to fetch data'; // Error handling
        });
});

// Ensure the DOM is fully loaded before trying to access elements
document.addEventListener('DOMContentLoaded', function() {
    // Automatically open the first tab, or another tab, when the page loads
    openTab(null, 'Implants'); // Pass 'null' for the event since there's no click event
});