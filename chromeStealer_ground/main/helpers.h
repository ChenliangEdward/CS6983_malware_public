#pragma once

#include <windows.h>
#include <pb_common.h>
#include <pb_encode.h>
#include <pb_decode.h>
#include <sodium.h>
#include "debug.h"

#include "message.pb.h"

/* Custom/Helper functions */
// #define DEBUG_CONTROL   1

void ask_to_proceed();
size_t custom_strlen(const char* str);
char* custom_strcat(char* dest, const char* src);
void print_base64(const uint8_t *data, size_t data_len);
DWORD generate_guid_b64(char* client_guid_b64_buffer, size_t client_guid_b64_buffer_size);

/* Session Key Racheting Functions */
DWORD derive_nonce_kdf_session(const uint8_t *key, size_t dummy,
                               uint8_t *nonce, size_t nonce_size,
                               uint8_t *key_kdf, size_t key_kdf_size, 
                               uint8_t *session_key, size_t session_key_size);

// Function to strip +, /, =, % characters from a string
void stripbs(char *input);

/* Protobuf related functions*/
// serialize: from structure to transferrable bytes
size_t serialize(pb_ostream_t* stream, void* message, const pb_msgdesc_t* message_fields);
size_t deserialize(pb_istream_t* stream, void* message, const pb_msgdesc_t* message_fields);

void getting_URL(uint8_t* suburl_bin, char* base_url, char* URL);